#!/bin/bash

source script/utils/dotfiles.lib.sh
debug

install_neovim() {
	rm -rf /tmp/neovim
	rm -rf $(which neovim)
	quiet_git clone https://github.com/neovim/neovim /tmp/neovim
	cd /tmp/neovim
	sudo make install
}

install_tmux() {
	rm -rf /tmp/tmux
	rm -rf $(which tmux)
	quiet_git clone https://github.com/tmux/tmux.git /tmp/tmux
	cd /tmp/tmux
	sh autogen.sh
	./configure
	make && sudo make install
}

if [[ "$(uname)" == 'Darwin' ]]; then
	if ! type -P brew >/dev/null; then
		CI=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
	fi
	brew analytics off
	brew bundle || true

	if [ command -v sw_vers >/dev/null 2>&1 ]; then
			## Hammerspoon
			rm -rf ~/.hammerspoon/Spoons/*
			mkdir -p ~/.hammerspoon/Spoons
			quiet_git clone https://github.com/jasonrudolph/ControlEscape.spoon.git ~/.hammerspoon/Spoons/ControlEscape.spoon
	fi

elif [[ "$(uname)" == 'Linux' ]]; then
	DISTRO=$(lsb_release -d | awk '{ print $2 }')
	if [[ "$DISTRO" == 'Ubuntu' ]] || [[ "$DISTRO" == 'Debian' ]]; then
		sudo apt-get update && sudo apt-get install -y ninja-build gettext libtool libtool-bin autoconf automake cmake g++ pkg-config unzip curl stow tmux zsh libevent-dev ncurses-dev build-essential bison dirmngr apt-transport-https lsb-release ca-certificates
		bash script/utils/node-install
		npm install --global yarn
	fi
	if ! [ $( tmux -V | cut -d " " -f2 | cut -d "-" -f2 | cut -d '.' -f1) -ge 3 ]; then
		install_tmux
	fi
	if ! [ $( nvim -v | head -n1 | cut -d " " -f2 | cut -d "-" -f1 | cut -d "." -f2) -ge 6 ]; then
		install_neovim
	fi
fi
