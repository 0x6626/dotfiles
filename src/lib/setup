#!/usr/bin/env bash
# shellcheck source=../lib/stow
source ./src/lib/stow

# shellcheck source=../lib/utils
source ./src/lib/utils

setup_htop() {
  rm -f ~/.config/htop/htoprc
  stow_configuration htop "$HOME"
}

setup_zsh() {
  local ZSH_ANTIGEN_DIR=$HOME/.antigen
  local ZSH_LOCAL=$HOME/.zshrc.local
  stow_configuration zsh "$HOME"
  if ! [[ -d "$ZSH_ANTIGEN_DIR" ]]; then
    rm -rf "$ZSH_ANTIGEN_DIR"
    git clone https://github.com/zsh-users/antigen.git "$ZSH_ANTIGEN_DIR"
  fi
  dotfiles_export="export DOTFILES_DIR=$DOTFILES_DIR"
  if ! grep -q "$dotfiles_export" "$ZSH_LOCAL"; then
    echo "$dotfiles_export" >>"$ZSH_LOCAL"
  fi
  sudo chsh -s "$(which zsh)" "$(whoami)" >/dev/null
  curl -L https://iterm2.com/shell_integration/install_shell_integration.sh | bash
}

zsh_first_time_setup() {
  zsh -c "source $HOME/.zshrc"
}

setup_git() {
  rm -rf ~/.git*
  stow_configuration git "$HOME"
}

setup_zsh_leader() {
  if target_is_macos; then
    local url="https://github.com/dhamidi/leader/releases/download/v0.3.2/leader.darwin.amd64"
  else
    local url="https://github.com/dhamidi/leader/releases/download/v0.3.2/leader.linux.amd64"
  fi

  curl -L $url --output leader
  chmod +x leader
  local lbin="$HOME/.local/bin/"
  if ! [[ -d "$lbin" ]]; then
    mkdir -p "$lbin"
  fi
  mv leader "$HOME/.local/bin/"
  stow_configuration leader "$HOME"
}

setup_tmux() {
  local TPM_DIR=$HOME/.tpm
  stow_configuration tmux "$HOME"
  if ! [[ -d "$TPM_DIR" ]]; then
    git clone https://github.com/tmux-plugins/tpm "$TPM_DIR"
  fi
}

setup_hammerspoon() {
  rm -rf ~/.hammerspoon/Spoons/*
  mkdir -p ~/.hammerspoon/Spoons
  git clone https://github.com/jasonrudolph/ControlEscape.spoon.git ~/.hammerspoon/Spoons/ControlEscape.spoon
  stow_configuration hammerspoon "$HOME/.hammerspoon"
}

setup_fzf() {
  if target_is_macos; then
    "$(brew --prefix)"/opt/fzf/install --key-bindings --completion --no-update-rc
  elif target_is_codespaces; then
    FORCE=true sh -c "$(curl -fsSL https://starship.rs/install.sh)" >/dev/null
    tee ~/.fzf.zsh <<EOF >/dev/null
  source /usr/share/doc/fzf/examples/completion.zsh
  source /usr/share/doc/fzf/examples/key-bindings.zsh
EOF
  fi
}

setup_pomo() {
  "$DOTFILES_DIR"/src/packages/pomo/setup
}

setup_golang() {
  go install -v golang.org/x/tools/cmd/godoc@latest
  go install github.com/x-motemen/ghq@latest
}

common() {
  setup_golang
  setup_git
  setup_fzf
  setup_zsh
  zsh_first_time_setup
  setup_tmux
  setup_zsh_leader
}