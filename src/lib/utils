#!/usr/bin/env bash

export n="\n"
export NC='\033[0m'
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export ORANGE='\033[0;33m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export LIGHTGRAY='\033[0;37m'
export DARKGRAY='\033[1;30m'
export LIGHTRED='\033[1;31m'
export LIGHTGREEN='\033[1;32m'
export YELLOW='\033[1;33m'
export LIGHTBLUE='\033[1;34m'
export LIGHTPURPLE='\033[1;35m'
export LIGHTCYAN='\033[1;36m'
export WHITE='\033[1;37m'

failure() {
  echo -e "${n}${n}üò± Oh dear, something broke!${NC}"
  echo -e "${n}${RED}[ERROR]\t${NC}$(tail -n 1 <"$1")"
  echo -e "${n}${ORANGE}[CALLSTACK]${n}"
  local frame=0
  while caller $frame >/dev/null; do
    IFS=' ' read -r -a array <<<"$(caller $frame)"
    echo -e "${ORANGE}[$frame] ${NC} ${array[1]} in ${array[2]}:${array[0]}"
    ((frame++))
  done

  touch /tmp/dotfiles.errors.log
  cat "$TMP_ERRS" >/tmp/dotfiles.errors.log
  echo -e "${n}üóÑÔ∏è  more logs are in /tmp/dotfiles-errors.log"
  exit 1
}

define() { IFS=$'\n' read -r -d '' "${1}" || true; }

validate_target_configuration() {
  local target=$2
  [[ $(type -t is_bootstrapped) == function ]] || (echo "üõë is_bootstrapped function not found for $target, exiting" && exit 1)
  [[ $(type -t bootstrap) == function ]] || (echo "üõë bootstrap function not found for $target, exiting" && exit 1)
  [[ $(type -t setup) == function ]] || (echo "üõë setup function not found for $target, exiting" && exit 1)
  [[ -n $DOTFILES_DIR ]] || (echo "üõë dotfiles directory not found for $target, exiting" && exit 1)
  [[ -d $DOTFILES_DIR ]] || (echo "üõë dotfiles directory ($DOTFILES_DIR) not found $target, exiting" && exit 1)
}

function target_is_macos() {
  [ "$(uname)" = "Darwin" ] || return 1
}

function target_is_codespaces() {
  [ -n "${CODESPACES+x}" ] || return 1
}

export DOTFILES_SETUP_SUCCESS_MARKER_PATH=/etc/dotfiles-setup-success

function mark_setup_successful() {
  echo "üèÅ successful setup completed on $(date)" | sudo tee -a "$DOTFILES_SETUP_SUCCESS_MARKER_PATH"
}

function help_arg() {
  { [[ "$1" = "-h" ]] || [[ "$1" = "--help" ]]; } || return 1
}
