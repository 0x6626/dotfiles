#!/bin/bash
# shellcheck source=../../../lib/utils
source "$DOTFILES_DIR"/src/lib/utils

util_terminal_colors() {
    for i in {0..255}; do
        printf "\x1b[48;5;%sm%3d\e[0m " "$i" "$i"
        if ((i == 15)) || ((i > 15)) && (((i - 15) % 6 == 0)); then
            printf "\n"
        fi
    done
}

gh_set_token() {
    unset GITHUB_TOKEN
    if ! gh auth status &>/dev/null; then
        gh auth login -h github.com
    fi
    token="$(gh config get -h github.com oauth_token)"
    export GITHUB_TOKEN="$token"
}

cs_actions_dev() {
    name=$(gh cs create -r github/github -b master)
    gh cs ssh -c "$name" -- "cd /workspaces/github && script/setup-codespaces-actions"
    gh cs code -c "$name"
}

cs_create_and_open() {
    local nwo=$1
    local ref=$2
    if help_arg "$1"; then
        echo "Usage: cs_create_and_open <nwo> <ref>"
        echo "create a codespace for the given ref and nwo, then open it in vscode"
        return
    fi
    codespace="$(gh cs create -r "$nwo" -b "$ref")"
    gh cs code -c "$codespace"
}

dot_reload() {
    # shellcheck disable=SC1090
    source ~/.zshrc
    # shellcheck source=../../../lib/utils
    source "$DOTFILES_DIR"/src/lib/utils
    tmux source-file ~/.tmux.conf
    if target_is_macos; then
        hs -c "hs.reload()"
    fi
}

util_untar() {
    tar -xvf "$1"
}

util_tar() {
    tar -cvzf "$1".tar.gz "$1"
}